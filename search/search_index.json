{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"OpenScan - 3D Scanner","text":""},{"location":"#summary","title":"Summary","text":"<p>OpenScan is a modular concept, which can be used to build your photogrammetry based 3D scanner. You can simply use the individual modules and adjust it to your needs (i.e. firmware, 3d printed design, PCB, photogrammetry cloud processing ...). The center piece is a Raspberry Pi driven camera/motor controller, which can be used to drive various photogrammetry rigs.</p> <p>The project is based on the contribution of many great and open-minded people by doing tutorials on YouTube, comments on Reddit, publications on GitHub and many other places. Without all those voluntary contributors, this project would not be possible at all.</p>"},{"location":"#setup-and-use-your-scanner","title":"Setup and use your scanner","text":"<p>Use the navigation bar on this site or the following links to get your scanner up and running:</p> <ul> <li>Soldering</li> <li>Building the OpenScan Classic</li> <li>Building the OpenScan Mini</li> <li>Firmware - Setup</li> <li>Firmware - First start, tips&amp;tricks</li> <li>Photogrammetry Basics</li> </ul>"},{"location":"#bugs-feature-requests","title":"Bugs &amp; Feature requests","text":"<p>If you like the project and want to help to make it even better, please consider supporting in any of the following ways:</p> <ul> <li>report a bug or create a feature request - this can be a minor typo in the firmware, a missing piece in the documentation or a major design revision. Don't be afraid, if you have no programming background: This guide contains all the information you need.</li> <li>share the project and scanning results with the world - the more people join, the faster the project will improve</li> <li>improve the design or electronics</li> <li>help with the documentation</li> <li>create video tutorials or any other educational resources</li> </ul>"},{"location":"#community","title":"Community","text":"<p>Feel free to join one of the following channels to engage with the wonderful OpenScan community.</p> <ul> <li>Discord This is the main channel for up-to-date discussions and developments.</li> <li>Reddit - /r/openscan</li> <li>Facebook - Low Budget 3D Scan</li> <li>Twitter</li> <li>Instagram</li> </ul>"},{"location":"#underlying-repositories","title":"Underlying repositories","text":"<p>If you want to take part in the development of a specific part of the OpenScan system, feel free to join:</p> <ul> <li>OpenScan-Documentation (this repository)</li> <li>OpenScan-Firmware</li> <li>OpenScan-Design - 3D printable files and other design approaches</li> <li>OpenScan-PCB - A place to discuss and improve the PCB designs</li> <li>OpenScanCloud - Web API for photogrammetry processing of image files</li> <li>OpenScan-ML - Development of new tools using Machine Learning</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#2022-05-19-documentation","title":"2022-05-19 documentation","text":"<ul> <li>changed: overall structure --&gt; the OpenScan2 repository will serve as a central hub for all informations concerning OpenScan (i.e. firmware, hardware, tutorials ...)</li> </ul>"},{"location":"changelog/#2022-05-11-beta","title":"2022-05-11 beta","text":"<ul> <li>added: changelog and version (finally ;)</li> <li>added: create an update using the node-red-backend inject node (\"create beta\" and \"prepare image creation\" in \"update\" tab)</li> <li>fixed: Error handling in flask (when no preview is taken)</li> <li>fixed: Error when upload failed + node red restarted (multiple instances of curl)</li> <li>fixed: When closing the browser session/missing the popup after the routine, the data set got lost (if this happens, just restart the device and it will be moved to the right location)</li> </ul>"},{"location":"changelog/#2022-04-26-beta","title":"2022-04-26 beta","text":"<ul> <li>added: donation button ;)</li> <li>fixed: the wonderful camera position algorithm was faulty and a bit inefficient</li> <li>fixed: downscaling the preview image caused the preview to disappear (when crop value was to high)</li> <li>fixed: delay_before and delay_after are now properly applied, so that you can set a delay before/after taking a photo</li> <li>fixed: updates might crash the selected camera --&gt; it is now necessary to re-select the camera after certain updates</li> </ul>"},{"location":"changelog/#2022-04-21-beta","title":"2022-04-21 beta","text":"<ul> <li>added: timer (ETA) until a routine is done</li> <li>added: showing progress, while files are being split (before uploading to OpenScanCloud)</li> <li>added: infotexts (FINALLY :)</li> <li>added: several stats/device information</li> <li>fixed: combining two sets did not delete the smaller set</li> </ul>"},{"location":"changelog/#2022-04-20-beta-main","title":"2022-04-20 beta &amp; main","text":"<ul> <li>!fixed: pi cameras (v1.3, v2.1 and HQ) finally work and can be simply selected in the settings menu</li> <li>!fixed: Raspberry Pi 3B+ and 4 work! (the main limiting factor now is the RAM, where at least 1GB RAM is needed)</li> <li>fixed: live preview sometimes did not work. This has been a network speed issue and has been solved by downscaling the image (resolution can be set)</li> <li>fixed: it is now possible to delete individual sets.</li> <li>fixed: it is now possible to use all LEDs.</li> <li>added: Turntable mode (disable the second axis)</li> <li>added: Pause scan. You can pause and un-pause the scan by simply pressing the button</li> <li>added: second scan pass. When one scan is done, you can immediately run a second pass. This is especially useful, if you want to re-orient the object</li> <li>added: auto-timeout. Turn off the ringlight (todo: and motors) after 300 seconds (value can be set)</li> <li>added: diskspace warning. When free diskspace drops below a given threshold (4GB by default), a warning message will appear</li> <li>changed: new background image, minor design changes</li> <li>changed: log file can be easily generated and downloaded by clicking a button (update&amp;info tab)</li> </ul>"},{"location":"downloads/","title":"Downloads","text":""},{"location":"downloads/#printable-files","title":"Printable files","text":"<p>2024-11-11 OpenScan Mini @ Dropbox</p> <p>2024-11-11 OpenScan Classic @ Dropbox</p>"},{"location":"downloads/#firmware-images","title":"Firmware Images","text":"<p>2024-09-09 Official Firmware for OpenScan Mini + Classic @ Dropbox (1,6GB)</p>"},{"location":"downloads/#other-files","title":"Other files","text":"<p>wpa_supplicant.conf @ Dropbox</p>"},{"location":"firmware/setup/","title":"Firmware - Setup","text":""},{"location":"firmware/setup/#overview","title":"Overview","text":"<p>It is necessary to use a Raspberry Pi with at least 1GB of RAM to run the firmware. So far, the firmware has been tested on Raspberry Pi 3B+ and 4B variants, but it might work on other versions.</p> <p>The easiest way is to download the latest Raspbian image and flash your micro SD card as described here.</p> <p>Alternatively you can set up the firmware manually by following this guide.</p>"},{"location":"firmware/setup/#flashing-the-sd-card-using-the-raspberry-pi-imager","title":"Flashing the SD Card using the Raspberry Pi Imager","text":"<p>I have pre-compiled a working Raspbian Image (2022-07-08), that can be downloaded from Dropbox (1.6GB) (working flawlessly on Raspberry Pi 3b+ and 4)</p> <p>Download and flash the Raspbian Image to your Micro SD Card using the Raspberry Pi Imager</p> <p>!!!!Select CUSTOM IMAGE AND DO NOT USE ANY OF THE ADVANCED SETTINGS OF THE RASPBERRY PI IMAGER AS THIS MIGHT CAUSE ISSUES WITH THE WIFI!!!!</p> <p>The best way to further setup the device is done through Ethernet connection (LAN cable to your router) as described in this section.</p>"},{"location":"firmware/setup/#below-is-only-for-very-advanced-users-and-usually-not-necessary-when-using-the-pre-compiled-image-from-above","title":"BELOW IS ONLY FOR VERY ADVANCED USERS AND USUALLY NOT NECESSARY WHEN USING THE PRE-COMPILED IMAGE FROM ABOVE!!!","text":""},{"location":"firmware/setup/#manually-installing-and-setting-up-your-raspberry-pi","title":"Manually installing and setting up your Raspberry Pi","text":"<p>The firmware and following installation guide is optimized for Raspbian Bullseye with Desktop environment, but can also be used headless (Note, that the desktop version comes with some libraries that you will otherwise need to install manually).</p>"},{"location":"firmware/setup/#raspi-config","title":"Raspi-config","text":"<p><code>sudo raspi-config</code></p> <p><code>--&gt; performance options --&gt; GPU --&gt; change to 256</code> Increase GPU memory, which helps processing the captured photos</p> <p><code>--&gt; localization settings --&gt; wlan country --&gt; your country</code> Change the WLAN settings, so that device works in your area</p> <p>Save and reboot now (or later ;)</p>"},{"location":"firmware/setup/#folder-structure","title":"Folder structure","text":"<p>Create directories</p> <p><code>mkdir /home/pi/OpenScan/ /home/pi/OpenScan/scans /home/pi/OpenScan/files /home/pi/OpenScan/settings /home/pi/OpenScan/tmp /home/pi/OpenScan/updates</code></p>"},{"location":"firmware/setup/#wlan-settings","title":"WLAN settings","text":"<p>Open the settings file</p> <p><code>sudo nano /etc/network/interfaces</code></p> <p>And add to the end:</p> <pre><code>auto wlan0\niface wlan0 inet manual\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n</code></pre>"},{"location":"firmware/setup/#samba-optional-but-highly-recommended","title":"Samba (optional but highly recommended)","text":"<p>Create a shared network drive, so that you can easily access the Raspberry Pi's filesystem. It enables you to upload custom datasets to the OpenScanCloud through the browser interface. Simply copy a zip file containing your photos to the ../OpenScan/scans directory.</p> <p>Install the package</p> <p><code>sudo apt-get install samba samba-common-bin</code></p> <p>Open the configuration file</p> <p><code>sudo nano /etc/samba/smb.conf</code></p> <p>And change the following lines:</p> <pre><code>read only = no\ncreate mask = 0775\ndirectory mask = 0775\n</code></pre> <p>Add the following line, if you are using Windows:</p> <p><code>wins support = yes</code></p> <p>And add to the end of the file:</p> <pre><code>[PiShare]\ncomment=Raspberry Pi Share\npath=/home/pi/\nbrowseable=Yes\nwriteable=Yes\nonly guest=no\ncreate mask=0777\ndirectory mask=0777\npublic=yes\n</code></pre> <p>Set a password for user pi (by default I use password raspberry)</p> <p><code>sudo smbpasswd -a pi</code></p> <p>And add rights:</p> <p><code>sudo chmod -R 777 /home/pi/OpenScan</code></p>"},{"location":"firmware/setup/#gphoto","title":"Gphoto","text":"<p>Necessary to controll DSLR cameras connected by USB cable.</p> <pre><code>sudo apt install libgphoto2-dev gphoto2\nsudo pip3 install -v gphoto2\n</code></pre>"},{"location":"firmware/setup/#nodered","title":"NodeRed","text":"<p>Download and install:</p> <pre><code>bash &lt;(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)\n</code></pre> <p>--&gt; confirm with yes and yes :)</p> <p>Open node-red daemon file:</p> <p><code>sudo nano /lib/systemd/system/nodered.service</code></p> <p>add to the section [Unit]</p> <pre><code>Wants=network.target flask.service\nAfter=flask.service\n</code></pre> <p>and change the following lines under [Service] to run nodered as root:</p> <pre><code>User = root\n#Group = pi\n</code></pre> <p>Initialize node-red:</p> <p><code>sudo node-red admin init</code></p> <ul> <li>settings file: <code>/root/.node-red/settings.js</code></li> <li>Security: <code>No</code></li> <li>Project: <code>No</code></li> <li>Flows File Settings: <code>Enter</code></li> <li>Passphrase: <code>Enter</code></li> <li>Theme: <code>default</code></li> <li>Text editor: <code>default</code></li> <li>External Modules: <code>Yes</code></li> </ul> <p>Open node-red settings file:</p> <p><code>sudo nano /root/.node-red/settings.js</code></p> <p>And find, uncomment and change the following parameters:</p> <pre><code>userDir: '/home/pi/OpenScan/settings/.node-red/',\n\nuiPort: process.env.PORT || 80,\n\nhttpAdminRoot: '/editor',\n\nhttpStatic: '/home/pi/OpenScan/',\n\nui: { path: \"\" },\n\nfunctionGlobalContext: { // enables and pre-populates the context.global variable\n    os:require('os'),\n    path:require('path'),\n    fs:require('fs')\n    },\n</code></pre> <p>Enable nodered daemon and restart the device:</p> <pre><code>sudo systemctl enable nodered.service\nsudo reboot -h\n</code></pre> <p>Open the node-red settings directory:</p> <p><code>cd /home/pi/OpenScan/settings/.node-red/</code></p> <p>And run the following command to install some additional palettes to node-red</p> <p><code>sudo npm i node-red-dashboard &amp;&amp; sudo npm i node-red-contrib-python3-function &amp;&amp; sudo npm i node-red-node-ui-table</code></p> <p><code>node-red-restart</code></p>"},{"location":"firmware/setup/#libcamera-to-run-arducam-imx519-and-other-non-raspberry-pi-camera-moduls","title":"Libcamera - to run Arducam IMX519 (and other non-Raspberry-Pi camera moduls)","text":"<p>See Arducam.com for more details</p> <p>Download all necessary files</p> <p><code>wget -O install_pivariety_pkgs.sh https://github.com/ArduCAM/Arducam-Pivariety-V4L2-Driver/releases/download/install_script/install_pivariety_pkgs.sh &amp;&amp; chmod +x install_pivariety_pkgs.sh</code></p> <p><code>sudo apt update</code></p> <p><code>./install_pivariety_pkgs.sh -p libcamera_dev</code></p> <p><code>./install_pivariety_pkgs.sh -p libcamera_apps</code></p> <p><code>./install_pivariety_pkgs.sh -p imx519_kernel_driver</code></p>"},{"location":"firmware/setup/#download-openscan-firmware","title":"Download OpenScan Firmware","text":"<p>Custom node red flows (browser interface):</p> <p><code>sudo wget https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/main/flows.json -O /home/pi/OpenScan/settings/.node-red/flows.json</code></p> <p>Some Python functions used by the firmware:</p> <p><code>sudo wget https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/main/OpenScan.py -O /usr/lib/python3/dist-packages/OpenScan.py</code></p> <p>A local server providing several functions (flask):</p> <p><code>sudo wget https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/main/fla.py -O /home/pi/OpenScan/files/fla.py</code></p> <p>Custom config.txt file, which is needed to use different camera moduls (especially IMX519):</p> <p><code>sudo wget https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/main/config.txt -O /boot/config.txt</code></p> <p>Arducam's camera focus script for the IMX519 sensor:</p> <p><code>sudo wget https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/main/Arducam.py -O /usr/lib/python3/dist-packages/Arducam.py</code></p> <p>And the OpenScan Logo to have a nice background:</p> <p><code>sudo wget https://raw.githubusercontent.com/OpenScanEu/OpenScan2/main/update/files/logo.jpg -O /home/pi/OpenScan/files/logo.jpg</code></p>"},{"location":"firmware/setup/#enable-flask-local-server","title":"Enable Flask local server:","text":"<p>create and open the service file: <code>sudo nano /lib/systemd/system/flask.service</code></p> <p>with the following content:</p> <pre><code>[Unit]\nDescription=photo service\nAfter=multi-user.target\n[Service]\n#ExecStartPre=/bin/sleep 5\nExecStart=/usr/bin/python3 /home/pi/OpenScan/files/fla.py\nStandardOutput=inherit\nStandardError=inherit\nRestart=always\nRestartSec=5\nUser=root\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Enable and start the service:</p> <p><code>sudo systemctl daemon-reload &amp;&amp; sudo systemctl enable flask.service &amp;&amp; sudo systemctl start flask.service</code></p>"},{"location":"firmware/setup/#others","title":"others","text":"<p>add to /boot/config.txt to disable display which causes some issues --&gt; WHY???</p> <p><code>hdmi_blanking=2</code></p>"},{"location":"firmware/usage/","title":"How to use the OpenScan Firmware","text":""},{"location":"firmware/usage/#tldr","title":"TLDR","text":"<ul> <li>Add your Wi-Fi credentials to wpa_supplicant.conf in the /boot/ directory of the SD card OR connect the device to your router with an Ethernet cable</li> <li>connect the device to a 12V power source and start booting</li> <li>after 1-2 mins, access http://openscan/ or sometimes http://openscan.local/ on a device connected to the same network.  Alternatively, you can connect to http:// + IP using the IP of the scanner.</li> <li>enter the model and camera type</li> <li>optional: open settings menu and request &amp; insert the OpenScanCloud token</li> <li>open Scan menu, turn on the ringlight, adjust the brightness, crop unneeded background and make a first dataset of 50-100 photos</li> <li>download the photos to your PC in the Files&amp;Cloud menu (alternatively, upload the dataset to OpenScanCloud for processing)</li> </ul>"},{"location":"firmware/usage/#connecting-to-the-device-for-the-first-time","title":"Connecting to the device for the first time","text":""},{"location":"firmware/usage/#by-ethernet","title":"By ethernet","text":"<p>It is highly recommended to use an Ethernet cable for the first start and add Wi-Fi credentials in settings menu later (see ...).</p> <p>To do so, connect the Raspberry Pi to your router using an Ethernet cable. Skip the next step.</p>"},{"location":"firmware/usage/#by-wi-fi","title":"By Wi-Fi","text":"<p>Insert the Micro-SD card into your computer and open the boot-directory. Find and open the file wpa_supplicant.conf </p> <p>Change the country code according to your location (see Wikipedia - ISO3166-1 alpha-2 country codes) and change your Network name (SSID) and Wi-Fi-Password (psk):</p> <p></p> <p>Double-check your SSID and PSK! Seriously! ;)</p> <p>Save the file and unmount the Micro-SD card from your computer.</p>"},{"location":"firmware/usage/#accessing-the-user-interface","title":"Accessing the user-interface","text":"<p>Insert the Micro-SD card into the Raspberry Pi and power up the device. The first boot will take 2-3 minutes. The LED ring light will blink several times after successfully starting the scanner.</p> <p>You will be able to access the scanner's interface from any device in the same network. Open any browser and follow this link: http://openscan/, which will open the following start screen:</p> <p></p> <p>Note: It is highly recommended (but not necessary) to allow internet access in order to get the latest updates and/or use the free OpenScanCloud processing pipeline. Alternatively, you can deactivate internet access in your router's settings and use the scanner locally.</p> <p>The scanner will automatically check if new updates are available. Before continuing, make sure to install updates by clicking the button. The device will reboot.</p>"},{"location":"firmware/usage/#select-camera-and-scanner-model","title":"Select camera and scanner model","text":"<p>Select the scanner's model from the dropdown menu:</p> <ul> <li> <p>OpenScan Classic</p> </li> <li> <p>OpenScan Mini</p> </li> </ul> <p>Select the camera from the dropdown menu:</p> <ul> <li> <p>Pi Camera v1, v2, HQ, Arducam IMX519, IMX290, IMX378, OV9281 are connected through the ribbon cable. If you encounter any issues, please check the cable's orientation!</p> </li> <li> <p>DSLR (gphoto) - can be used with a wide range of cameras, which can be connected and controlled via USB. Check GPhoto if your camera is supported.</p> </li> <li> <p>External Camera - Can be used to connect your camera trigger to the GPIO pins on the front of the Pi shield. This can be used with any (modified) remote shutter release, and thus it is possible to use Smartphones, DSLR and compact cameras</p> </li> </ul> <p>After selecting camera and model, you should restart the device one final time ;)</p> <p></p> <p>Now, the shown start screen will appear in its full glory showing all available sub-menus. You can navigate the menu by expanding the navigation bar on the top left:</p> <p>You are ready to start scanning :)</p> <p>But before you do so, please open the settings menu in order to customize the device to your needs and use its full potential!</p>"},{"location":"firmware/usage/#settings-menu","title":"Settings Menu","text":"<p>Note that there are small Info buttons in every column, which will open a pop-up window with additional information</p>"},{"location":"firmware/usage/#ssh","title":"SSH","text":"<p>If you do not intend to access the device by terminal, please deactivate SSH. If you want to use SSH, please use the following credentials to login and change the password immediately! (default user: pi, password: raspberry)</p>"},{"location":"firmware/usage/#samba","title":"Samba","text":"<p>Samba is a local filesharing server, which allows accessing the files on the device directly from your computer. This can be used to manage the image sets in your file browser. Additionally, you can upload zip files containing image sets from your computer to the Raspberry Pi in order to use the OpenScanCloud processing pipeline. If you do not intend to use this feature, please deactivate Samba.</p> <p>Please change the default password by running the following command (default user: pi, password: raspberry):</p> <p><code>sudo smbpasswd -a pi</code></p> <p>Copy the following address to your file browser in order to access the local files: <code>\\\\openscan\\PiShare\\OpenScan\\scans</code></p>"},{"location":"firmware/usage/#openscancloud","title":"OpenScanCloud","text":"<p>In order to use the free/donation-based OpenScanCloud, you first have to read &amp; agree to the Terms of use. The only requirement is an individual token, which is a 32-digit individual key, which you can easily get through the user interface. In order to get such a token you need to hit register and enter your e-mail address, first and family name. The token will be sent to the given mail within one or two days. Please check your spam folder!</p> <p>As soon as you enter a token, it will be verified and you can see your individual \"limits\"</p> <p></p> <p>Each token comes with a given amount of 'credit' which is another measure against spam. The given number in Gigabyte indicates the amount of data, that you can process on the servers. IMPORTANT: The credit can be increased at any time by sending a mail to cloud@openscan.eu</p>"},{"location":"firmware/usage/#network-hostname","title":"Network - Hostname","text":"<p>If you use multiple OpenScan devices in the same network, it is quite useful to give every scanner its individual name ;)</p>"},{"location":"firmware/usage/#advanced-settings","title":"Advanced settings","text":"<p>There are a ton of additional settings, which you can modify. Note, that for the OpenScan Classic &amp; Mini, you do not need to touch any of those settings.</p>"},{"location":"firmware/usage/#scan","title":"SCAN","text":"<p>Finally! Time to start scanning :)</p> <ul> <li>set the projectname</li> <li>Place the prepared object on the turntable (please follow how to get good scanning results, to properly prepare your object  and setup and avoid disappointing results :))</li> <li>Turn on the ring light</li> <li>when using the OpenScan Classic: move the camera close to the object</li> <li>adjust the shutter speed, so that there are no over- or underexposed areas</li> <li>crop the image, so that the amount of visible background is minimal</li> <li>70 - 100 photos are more than enough for almost all objects. If the result is bad, 200 photos won't improve it significantly ;)</li> <li>Start the routine</li> <li>Pause, unpause or stop the routine if you need to</li> <li>After the scan is done, you can choose, whether you want to do a second pass, with a different object orientation or finish the scan. Once finished, the image set can be accessed in the Files&amp;Cloud menu.</li> </ul>"},{"location":"firmware/usage/#how-to-get-good-scanning-results","title":"HOW TO GET GOOD SCANNING RESULTS","text":"<p>Whether a scanning result will be good or bad is fully determined before even starting the scan. Especially metal and plastic parts will need some kind of preparation (i.e. chalk or scanning spray). Please read the basic guide to photogrammetry.</p> <p></p>"},{"location":"firmware/usage/#troubleshooting","title":"Troubleshooting","text":""},{"location":"firmware/usage/#what-is-the-starting-position-for-the-rotor","title":"What is the starting position for the rotor","text":"<p>Please understand the coordinate system used here. The following image shows the 0\u00b0-position</p> <p></p> <p>and you can set the starting position of the rotor in the settings menu/motor tab (advanced settings)</p>"},{"location":"firmware/usage/#the-motor-moves-to-fast","title":"The motor moves to fast","text":"<ul> <li>lower the acceleration in the settings menu/motor tab (advanced settings)</li> <li>increase the motor delay (advanced settings)</li> </ul>"},{"location":"firmware/usage/#the-images-are-out-of-focus","title":"The images are out of focus","text":"<ul> <li>in case of Arducam: use manual focus mode</li> <li>in case of Pi Camera: re-focus the camera using the focus adjustment tool</li> </ul>"},{"location":"firmware/usage/#the-scanner-does-not-cover-the-whole-object","title":"The scanner does not cover the whole object","text":"<ul> <li>change the min/max angle in the motor rotor settings (advanced settings)</li> </ul>"},{"location":"firmware/usage/#when-pressing-up-the-rotor-is-moving-down","title":"when pressing up, the rotor is moving down","text":"<ul> <li>invert the motor by either flipping the motor cable's connector 180\u00b0 (after powering off the device!!) or change the motor's direction in the motor settings menu (advanced settings)</li> </ul>"},{"location":"firmware/usage/#i-do-not-want-the-fancy-scan-routine-and-instead-use-the-turntable-only","title":"I do not want the fancy scan routine and instead use the turntable only","text":"<ul> <li>activate the turntable mode in the motor settings (advanced settings), which will deactivate the rotor</li> </ul>"},{"location":"firmware/usage/#files-cloud","title":"FILES &amp; CLOUD","text":""},{"location":"firmware/usage/#update-info","title":"UPDATE &amp; INFO","text":""},{"location":"firmware/usage/#backend-node-red","title":"Backend (node-red)","text":"<p>You can access the backend/programming interface Node-red through the following link http://openscan/editor</p> <p></p>"},{"location":"guideline/report_bug/","title":"How to create an issue on GitHub","text":"<p>Did you find an annoying bug or have a great idea on how to improve OpenScan. No matter if it is just a misaligned text in the firmware or a revolutionary new scanner design that you want to share. You can simply create an issue in the according repository (see below).</p> <p>For the following steps a free GitHub account is needed:</p>"},{"location":"guideline/report_bug/#navigate-to-the-right-repository","title":"Navigate to the right repository:","text":"<p>Choose the right repository from the following list and open it in a new tab:</p> <ul> <li>Documentation</li> <li>Firmware</li> <li>CAD</li> <li>PCB</li> <li>OpenScanCloud</li> </ul>"},{"location":"guideline/report_bug/#look-through-the-existing-issues","title":"Look through the existing issues:","text":"<ul> <li>Navigate to Issues (1)</li> <li>Use the search/filter to check if there is already a solution to the problem (e.g. \"cloud\") (2)</li> <li>Please take some time to read the existing issues/solutions carefully</li> <li>If needed, continue to create a new issue (3)</li> </ul>"},{"location":"guideline/report_bug/#create-a-new-issue","title":"Create a new issue:","text":"<ul> <li>Choose one of the existing templates (e.g. missing dokumentation, bug report, feature request, design idea ...)</li> <li>Use the given structure as much as possible (but feel free to deviate from it as needed). </li> <li>You can add photos/screenshots and even videos. Try to be as specific as possible.</li> <li>Submit the issue</li> <li>Note, that it does not really help, if the issue is published on other plattforms, as all development is coordinated here on Github.</li> <li>You will be notified by mail as soon as the status of the issue changes (e.g. someone needs more details). Please take the time to follow-up on your initial request.</li> <li>Inactive issues will be closed after 30 days</li> </ul> <p>A final, but very important note: (Unfortunately) there is no payed developer team behind this project (yet ;) and it is maintained by a group of enthusiasts in their free time. So please bare this in mind, when submitting any kind of issue.</p>"},{"location":"hardware/OpenScanClassic/","title":"OpenScan Classic","text":""},{"location":"hardware/OpenScanClassic/#overview","title":"Overview","text":"<p>The OpenScan Classic is a compact desktop 3D scanner capable of scanning objects up to ~16 cm with an accuracy of up to 0.02 mm. The frame can be fully 3d printed, and all other components are off-the-shelf parts. You should be able to source all parts locally, or chose to support the OpenScan project by ordering (some) parts through Openscan.eu/shop. Currently, the following cameras can be used without any additional modifications: Arducam IMX519 16mp &amp; autofocus, Pi Camera v2 8mp and Pi Camera v1.3 5mp, where the Arducam IMX519 has to be considered the gold standard (for now :). Alternatively, you can even use many DSLR cameras, which can be connected and controlled through the Raspberry Pis USB interface...</p>"},{"location":"hardware/OpenScanClassic/#bill-of-material-bom","title":"Bill of material (BOM)","text":"<ul> <li>x M3x8 Screws</li> <li>x M3x12 Screws</li> <li>x M3 Nuts</li> <li>1x Pi Shield</li> <li>1x Nema 17 (&gt;40Ncm)</li> <li>1x Nema 17 (&gt;13Ncm)</li> <li>1x Raspberry Pi 3B+ or 4 (any)</li> <li>1x Micro SD Card (&gt;16GB)</li> <li>1x Camera Ribbon Cable 15cm</li> <li>1x Ringlight</li> <li>1x Camera Module IMX519 (alternatively Pi Camera V2 or V1.3) or DSLR camera</li> <li>2x M2x6 Nylon Screw</li> <li>2x M2x6 Nylon Standoff</li> <li>2x M2 Nuts</li> <li>(2x M2x12 Nylon Screw if you use the Pi Camera module)</li> </ul> <p>3d printed parts:</p> <p>recommended parts (see link below):</p> <ul> <li>1x Adapter1</li> <li>1x Adapter2 - Gear Large</li> <li>1x Pi Shield RPi with ringlight and Network + USB</li> <li>1x Pi Shield Base</li> <li>1x Stand1 Nema17</li> <li>1x Stand2</li> <li>2x Rotary Arm</li> <li>1x Turntable Adapter large</li> <li>1x Turntable Adapter small</li> <li>1x Gear Small (two versions available for right tolerances)</li> <li>1x Turntable Base (choose version according to your printer size)</li> </ul>"},{"location":"hardware/OpenScanClassic/#3d-printing","title":"3D Printing","text":"<p>Get the printable .stl (and design) files here.</p>"},{"location":"hardware/OpenScanClassic/#assembly","title":"Assembly","text":""},{"location":"hardware/OpenScanClassic/#control-module","title":"Control module","text":"<p>IMPORTANT:</p> <p>Skip this step until \"prepare control module\" if you intend to use external cameras only</p> <p>Make sure to follow the right setup for your camera module (either Arducam IMX519 or PiCamera V1.3/V2)</p>"},{"location":"hardware/OpenScanClassic/#arducam-imx519-16mp-with-autofocus","title":"Arducam IMX519 16mp with Autofocus","text":"<ul> <li>1x Ringlight PCB</li> <li>1x Arducam IMX519 16mp camera module </li> <li>2x M2x6 screws</li> <li>2x M2x6 standoffs</li> <li>2x M2 nuts</li> </ul> <p>Remove the protective foam/plastic in front of the lens.</p> <p>See the sequence of the parts: </p> <p></p> <p>Make sure that the lens is properly centered (looking at the ringlight from the front as shown in the right image):</p> <p></p>"},{"location":"hardware/OpenScanClassic/#pi-camera-v21-or-v13","title":"Pi Camera v2.1 or v1.3","text":"<ul> <li>1x Ringlight PCB</li> <li>Pi Camera v2.1 or v1.3 module </li> <li>2x M2x12 screws</li> <li>2x spacer</li> <li>2x M2 nuts</li> </ul> <p>See the sequence of the parts: </p> <p></p> <p></p>"},{"location":"hardware/OpenScanClassic/#prepare-control-module","title":"Prepare control module","text":"<p>Control Module: </p> <p>Use 8x M3x8 screws to mount the ringlight module and the Pi Shield in the following way: </p> <p>Connect the ringlight module and the pi shield with the 50cm ringlight cable, connect the motor cables: </p> <p>Use the 15cm camera ribbon cable to connect the Raspberry Pi and the camera. Make sure that the ribbon cables side with the metal pins is facing away from the USB ports of the Raspberry Pi.: </p> <p>Make sure to properly align the Raspberry Pi with the Pin headers on the Pi Shield. Misalignment might destroy both the Raspberry Pi and the Pi Shield!: </p> <p>Your control module is ready to use and should look something like: </p>"},{"location":"hardware/OpenScanClassic/#main-frame","title":"Main Frame","text":""},{"location":"hardware/OpenScanClassic/#attach-large-motor","title":"Attach large motor","text":"<ul> <li>Stand1_Nema_17.stl</li> <li>Nema 17 (min. 40Ncm)</li> <li>M3x8mm (4x)</li> <li>Gear_Small.stl (optional v2)</li> </ul> <p>(left) Mount the stepper motor with four M3x8mm Screws onto the Stand1.stl.</p> <p>(right) Press the Gear_small.stl onto the motor shaft. Make sure, that the gear and the motor shaft close flush at the front.</p> <p>Note: Depending on the printing accuracy, it may be necessary to pre-drill the screw holes with a 3mm drill bit. Furthermore the gear and the motor shaft might have a tight fit and you might have to \u201egently\u201c use the help of a hammer.</p>"},{"location":"hardware/OpenScanClassic/#mount-reduction-gears","title":"Mount reduction gears","text":"<ul> <li>Stand1_Nema_17.stl (after Step 4a)</li> <li>Adapter2.stl</li> <li>Steel pin (d=6mm, l&gt;50mm)</li> </ul> <p>(left) The steel pin is pressed into the opening of the side stand. You can use a cordless screwdriver to \"drill\" the pin into the opening.</p> <p>(middle) The larger gear (Adapter2.stl) is pressed onto the steel pin.</p> <p>(right) The steel pin (top) and the motor shaft must NOT protrude forward from the components and should be flush with the surface. Superglue can be used to fix the position of the gears.</p> <p>Note: Both gears should match well and rotate relatively resistance free. If this is not the case, it may be necessary to replace the small gear with v2.stl or adjust the printer settings.</p>"},{"location":"hardware/OpenScanClassic/#prepare-stand2","title":"Prepare Stand2","text":"<ul> <li>Stand2.stl</li> <li>Adapter1.stl</li> <li>Steel pin (d=6mm, l&gt;50mm)</li> </ul> <p>(left) The steel pin is pressed into the opening of the side stand. You can use a cordless screwdriver to \"drill\" the pin into the opening.</p> <p>(right) The adapter1.stl is pressed onto the steel pin. It is important to ensure that the steel pin does not protrude forward from the adapter.</p> <p>Note: The adapter can be fixed with superglue on the steel pin. It must be ensured that the steel pin can rotate freely in the stand.</p>"},{"location":"hardware/OpenScanClassic/#prepare-turntable","title":"Prepare Turntable","text":"<ul> <li>Turntable_Base_small.stl</li> <li>Nema 17 (min. 13Ncm, optional &gt;40Ncm)</li> <li>M3x8mm (4x)</li> <li>Rotary_Arm.stl (2x)</li> <li>Turntable_Adapter.stl</li> </ul> <p>Mount the Nema 17 on Turntable_Base_small.stl using four M3x8mm screws:</p> <p></p> <p>Place the Rotary Arm (2x) on the sides of the turntable_base.stl (red mark) and press any Turntable_Adapter.stl onto the motor shaft:</p> <p></p> <p>The connections marked red can be fixed with super glue if they are too loose.</p>"},{"location":"hardware/OpenScanClassic/#tilting-mechanism","title":"Tilting mechanism","text":"<ul> <li>Stand 1 (after step 4b)</li> <li>Stand 2 (after step 5)</li> <li>Turntable_Base_small.stl (after step 6) </li> <li>M3x12mm (2x)</li> </ul> <p>Combine all prepared parts as shown:</p> <p></p> <p>The height of the turntable has to be adapted for each scan object.</p> <p>Optimal height:</p> <p></p> <p>Object to high (left) and to low (right):</p> <p></p> <p>Insert two M3x12mm screws laterally into the adapters (red mark), so as to connect the side stands with the rotating arm (Turntable_Base + Rotary_Arm). </p> <p></p>"},{"location":"hardware/OpenScanClassic/#wiring-the-motors","title":"Wiring the motors","text":"<ul> <li>Control unit (after step 3)</li> <li>Tilting mechanism (after step 7/8)</li> <li>Stepper motor cable &gt;70cm (2x)</li> </ul> <p>Connect the motors to the control unit:</p> <p></p>"},{"location":"hardware/OpenScanClassic/#whole-setup","title":"Whole Setup","text":""},{"location":"hardware/OpenScanClassic/#picameraarducam","title":"PiCamera/Arducam","text":"<p>TODO add image of the whole setup</p>"},{"location":"hardware/OpenScanClassic/#external-camera-via-usb","title":"External Camera (via USB)","text":"<p>TODO add image of the whole setup</p> <p>You can directly connect a camera via USB and use the OpenScan web interface to preview and capture photos automatically. . The functionality is based on the great GPhoto2 Library (see gphoto.org) and the number of supported cameras is huge.</p> <p>NOTE: some cameras need to be set to a different operating mode (PTP mode).</p> <p>See this list on gphoto.org to check whether your camera is supported. It is necassary that Image Capture and Liveview are listed.</p>"},{"location":"hardware/OpenScanClassic/#external-camera-via-opto","title":"External Camera (via Opto)","text":"<p>TODO add image of the whole setup</p>"},{"location":"hardware/OpenScanClassic/#remote-shutter-release-i","title":"Remote shutter release (I)","text":"<p>For (almost) all cameras you can buy a relatively cheap remote shutter release. These modules can be modified easily and also connected to the Scanner\u2019s main control unit. </p> <p>A very extensive source for various camera models and home-made remote shutter release can be found on doc-diy.net. </p> <p>An existing remote release can be modified with minimal soldering skill and a total of two soldering points. The following pictures describe the basic procedure:</p> <p></p> <ul> <li>(left) Infrared Remote Control for Nikon/Canon (ca. 5\u20ac)</li> <li>(middle) Open the enclosure. See the contact area (red circle)</li> <li>(right) The green circle shows the contacts that are normally connected by pressing the button (first image). The holes marked by the red circles can be used to connect two cables, that can later be connected to the scanner\u2019s control module.</li> </ul> <p>The difficult part is to solder two male jumper wires to the identified contact points (red circles). </p> <p></p> <p>Shortening those two wires will have the same effect as pressing the button and it should trigger the camera. Connect the modified remote shutter release control to the two pins exposed to the front side of the scanners control module as shown on the first image of this chapter.</p>"},{"location":"hardware/OpenScanClassic/#remote-shutter-release-ii","title":"Remote shutter release (II)","text":"<p>This is another very typical remote shutter release. It contains three metal plates which gets pushed/connected consecutively (red circle). Creating a connection between the first and second metal plate will focus the camera. Wheras connecting all plates will trigger the shutter release.</p> <p></p> <p>Connect one wire each to the top and to the bottom metal plate. Shortening those two wires will have the same effect as pressing the button and it should trigger the camera.</p> <p>Connect the modified remote shutter release control to the two pins exposed to the front side of the scanners control module as shown on the first image of this chapter.</p>"},{"location":"hardware/OpenScanClassic/#bluetooth-trigger-iosandroid","title":"Bluetooth trigger (iOS/Android)","text":"<p>A modified Bluetooth trigger can be used to trigger most smartphone cameras. The shown module is operated with a CR2032 button cell, which must be inserted on the back. As soon as the On / Off switch has been flipped, the blue LED lights up at regular intervals. The device must then be paired with the smartphone via Bluetooth. This can be done in the smartphone\u2019s setting menu. The device should be visible as \u201cAB Shutter 3\u201d and has to be coupled accordingly</p> <p></p> <p>Connect the modified remote shutter release control to the two pins exposed to the front side of the scanners control module as shown on the first image of this chapter.</p>"},{"location":"hardware/OpenScanClassic/#operation","title":"Operation","text":"<p>TODO</p>"},{"location":"hardware/OpenScanMini/","title":"OpenScan Mini with Polarizer Module","text":""},{"location":"hardware/OpenScanMini/#overview","title":"Overview","text":"<p>The OpenScan Mini is a compact desktop 3D scanner capable of scanning objects up to ~8-10 cm with an accuracy of up to 0.02 mm. The frame can be fully 3d printed, and all other components are off-the-shelf parts. You should be able to source all parts locally, or chose to support the OpenScan project by ordering (some) parts through OpenScan.eu/shop. Currently, the following cameras can be used without any additional modifications: Arducam IMX519 16MP &amp; autofocus, Pi Camera v2 8MP and Pi Camera v1.3 5MP, where the Arducam IMX519 has to be considered the gold standard (for now :)</p>"},{"location":"hardware/OpenScanMini/#bill-of-material-bom","title":"Bill of material (BOM)","text":"<ul> <li>24x M3x8 screws</li> <li>1x M3x12 screw</li> <li>1x Pi Shield</li> <li>1x Nema 17 (&gt;40Ncm)</li> <li>1x Nema 17 (&gt;13Ncm)</li> <li>1x Raspberry Pi 3B+ or 4 (any)</li> <li>1x Micro SD Card (&gt;16GB)</li> <li>1x Camera Ribbon Cable 50cm</li> <li>1x Ringlight</li> <li>1x Camera Module IMX519 (alternatively Pi Camera V2 or V1.3)</li> <li>2x M2x6 Nylon Screw</li> <li>2x M2x6 Nylon Standoff</li> <li>2x M2 Nuts</li> <li>(2x M2x12 Nylon Screw if you use the Pi Camera module)</li> <li>1x Polarizer module</li> </ul> <p>3d printed parts:</p> <ul> <li>Frontplate</li> <li>Base</li> <li>Rotor</li> <li>small gear</li> <li>backplate</li> <li>object holders (4 sizes)</li> </ul>"},{"location":"hardware/OpenScanMini/#3d-printing","title":"3D Printing","text":"<p>Get the printable .stl (and design) files here.</p> <p>PRINTER</p> <ul> <li>you will need a print bed of at least 200x200mm</li> <li>depending on your printer's capabilities (and your risk aversion), all parts can be fitted onto one build plate of min. 220x210mm</li> <li>printing all parts can be done in under 17h (tested on Prusa MK3S+ using default Draft profile)</li> </ul> <p>PRINT SETTINGS</p> <ul> <li>support: only for 07_polarizer_b</li> <li>layer-height: 0.2-0.3 mm</li> <li>print speed: depends on your printer's calibration</li> </ul> <p>MATERIAL</p> <ul> <li>COLOR - main Frame: Please use a material without visible particles or structure. Avoid transparent materials</li> <li>COLOR - 07_polarizer_a: translucent/natural</li> <li>COLOR - 07_polarizer_b: any non-translucent material (like PETG black, Prusament Galaxy Black)</li> <li>PLA is totally fine, since there is not a lot of mechanical strength needed</li> <li>PETG, ABS, ASA can be used for increased temperature resistance in warm environments</li> </ul>"},{"location":"hardware/OpenScanMini/#assembly","title":"Assembly","text":""},{"location":"hardware/OpenScanMini/#frontplate-pi-shield","title":"Frontplate + Pi-Shield","text":"<ul> <li>1x Frontplate (3d print)</li> <li>1x Pi Shield</li> <li>4x M3x8</li> </ul> <p>Mount the Pi Shield to the front plate using four M3x8mm screws</p> <p></p>"},{"location":"hardware/OpenScanMini/#base-rotor","title":"Base + Rotor","text":"<ul> <li>1x Base (3d print)</li> <li>1x Rotor (3d print)</li> <li>lubricant and/or sandpaper (optional)</li> </ul> <p>Insert the rotor into the base and make sure, that the rotor can slide freely! (It might require some sanding and/or lubrication)</p> <p></p>"},{"location":"hardware/OpenScanMini/#mounting-the-turntable-motor","title":"Mounting the Turntable Motor","text":"<ul> <li>1x Base + Rotor</li> <li>1x Nema17 small</li> <li>4x M3x8 screws</li> </ul> <p>Make sure to mount the small stepper motor (Turntable) first. The motor connector should face to the left.</p> <p></p>"},{"location":"hardware/OpenScanMini/#mounting-the-rotor-motor","title":"Mounting the Rotor Motor","text":"<ul> <li>1x small gear (3d print)</li> <li>1x Nema17 large</li> <li>4x M3x8 screw</li> </ul> <p>Press the small gear onto the shaft of the larger stepper motor.</p> <p></p> <p>Mount the stepper motor with four M3x8 screws like shown below. Move the large ring a couple of times to make sure, that the gears fit. Again, the motor connector should face to the left.</p> <p></p>"},{"location":"hardware/OpenScanMini/#mounting-the-raspberry-pi","title":"Mounting the Raspberry Pi","text":"<ul> <li>1x Raspberry Pi</li> <li>1x Micro SD Card with OpenScan Image. See Firmware - Setup - Prepare/compile the SD Card. (Alternatively you can use a recent Raspbian version, if you intend to build the firmware yourself.)</li> <li>4x M3x8 screws</li> </ul> <p>Insert the Micro SD card into the slot of the Raspberry Pi.</p> <p>Mount the Raspberry Pi with four M3x8 screws. Make sure not to overtighten the screws, which might bend and damage the board. Note, that the Raspberry Pi's screw holes are a tight fit for those M3 screws.</p> <p></p>"},{"location":"hardware/OpenScanMini/#preparing-the-camera-cable","title":"Preparing the camera cable","text":"<ul> <li>1x camera ribbon cable (50cm)</li> </ul> <p>Insert the camera ribbon cable through the two slots (red arrows). Make sure that the metal plating of the cable is facing the stepper motor (yellow circle). Take care not to create sharp bends as this might damage the cable.</p> <p></p> <p>Continue through the next slot (again the metal plating should be facing away from you):</p> <p></p> <p>Insert the camera ribbon cable into the socket. The metal plating should be facing away from the USB/Ethernet ports (yellow circle). Gently push down on the socket clamp to close it (dark part that likes to break).</p> <p></p>"},{"location":"hardware/OpenScanMini/#preparing-the-ringlight-module","title":"Preparing the Ringlight Module","text":"<p>** There are three different variants for mounting the ringlight module: mounting the Arducam or Pi Camera on the ringlight and mounting the ringlight directly onto the rotor arm, or assembling the ringlight and Arducam with the help of the slide-in mount (available soon). Please scroll to the correct section for your hardware. **</p> <p>** IMPORTANT: Make sure to follow the right setup for your camera module: **</p>"},{"location":"hardware/OpenScanMini/#ringlight-variant-arducam-imx519-16mp-with-autofocus-and-plastic-screws","title":"Ringlight Variant: Arducam IMX519 16mp with Autofocus and plastic screws","text":"<ul> <li>1x Ringlight PCB</li> <li>1x Arducam IMX519 16mp camera module</li> <li>2x M2x6 screws</li> <li>2x M2x6 standoffs</li> <li>2x M2 nuts</li> </ul> <p>Remove the protective foam/plastic in front of the lens.</p> <p>See the sequence of the parts:</p> <p></p> <p>Make sure that the lens is properly centered (looking at the ringlight from the front as shown in the right image):</p> <p></p>"},{"location":"hardware/OpenScanMini/#ringlight-variant-pi-camera-v21-or-v13","title":"Ringlight Variant: Pi Camera v2.1 or v1.3","text":"<ul> <li>1x Ringlight PCB</li> <li>Pi Camera v2.1 or v1.3 module</li> <li>2x M2x12 screws</li> <li>2x spacer</li> <li>2x M2 nuts</li> </ul> <p>See the sequence of the parts:</p> <p></p> <p></p>"},{"location":"hardware/OpenScanMini/#mounting-and-connecting-the-ringlight-module","title":"Mounting and connecting the Ringlight Module","text":"<ul> <li>1x Ringlight Module</li> <li>1x 50cm ringlight power cable (3P JST XH)</li> <li>4x M3x8 screws</li> </ul> <p>Mount the ringlight module using 4 M3x8mm bolts as indicated by the red arrows: </p> <p>Connect the camera ribbon cable to the camera. The Metal plating is facing down (yellow circle).</p> <p>when you have an orange ringlight cable make sure that the metal plating of the cable is facing up!!</p> <p>Connect the 50cm ringlight cable with 3P JST connectors to the Ringlight (red arrow):</p> <p></p> <p>Guide the ringlight cable as indicated by the yellow circles:</p> <p></p> <p>Check that the lens is centered so it doesn't touch the edge of the ringlight PCB. Otherwise it might get damaged during focussing! </p> <p>If necessary adjust its position.</p> <p>Guide the ringlight cable as indicated by the yellow circles:</p> <p></p>"},{"location":"hardware/OpenScanMini/#connecting-the-pi-shield","title":"Connecting the Pi Shield","text":"<ul> <li>1x Frontplate with Pi Shield</li> <li>2x stepper motor cable</li> </ul> <p>Connect the stepper motor cables to the Pi Shield and the corresponding stepper motors (see labels bellow):</p> <p></p> <ul> <li>(1) Turntable (small Nema 17)</li> <li>(2) Rotor (large Nema 17)</li> <li>(3) ST XH 3P (from ringlight module, see previous step)</li> </ul>"},{"location":"hardware/OpenScanMini/#mounting-the-frontplate","title":"Mounting the Frontplate","text":"<ul> <li>1x M3x12 screw</li> <li>1x frontplate with Pi Shield</li> <li>1x base/rotor</li> </ul> <p>Mount the frontplate to the base. Make sure that the pin headers of the Raspberry Pi and the Pi shield are properly aligned (yellow circle):</p> <p></p> <p>Use the M3 screw to connect the frontplate to the base:</p> <p></p>"},{"location":"hardware/OpenScanMini/#mounting-the-backplate","title":"Mounting the Backplate","text":"<ul> <li>4x M3x8 screws</li> <li>base/rotor</li> <li>backplate (3d print)</li> </ul> <p>Make sure the ringlight cable is sitting in the guide slot (yellow circle). Use the 4 M3x8 screws to mount the backplate (red arrows):</p> <p></p>"},{"location":"hardware/OpenScanMini/#mounting-the-diffuserpolarizer","title":"Mounting the Diffuser/Polarizer","text":"<ul> <li>OpenScan Mini</li> <li>Polarizer Module</li> </ul> <p>The Polarizer module can be easily mounted by clicking it onto the rotor: </p> <p>The polarizer module consists of two printed parts. It is very important that the smaller printed part (yellow circle) is not translucent in order to block all light. There are two pieces of linear polarizer foil. The smaller piece (15x11mm) was inserted into the slot (red arrow). The larger piece (75x66mm) is covering the whole front area except for the middle (red arrow). It is absolutely crucial that those two pieces are oriented perpendicularly against each other. The polarizer will greatly improve the results by filtering almost all direct reflections. </p>"},{"location":"hardware/OpenScanMini/#starting-the-device-for-the-first-time","title":"Starting the device for the first time","text":"<p>Plug in a 12V (min. 2A power supply) and start the device.</p> <p>Continue with this guide, which shows the initial setup of the firmware and some general tips &amp; tricks</p>"},{"location":"hardware/PCBs/","title":"PCBs","text":""},{"location":"hardware/PCBs/#pi-shield","title":"Pi Shield","text":"<p>The OpenScan Pi Shield can be used to control two independent stepper motors and a variety of different cameras (Pi Camera, various Arducams, DSLR - via GPhoto and external Cameras like Smartphone and others). The mechanism can be used in various forms (see for example OpenScan Mini + Classic) and it could be easily adapted to be used as a camera slider or in other mechanisms.</p> <p></p>"},{"location":"hardware/PCBs/#bom","title":"BOM","text":"Nr. Picture Count Name 1 1x Raspberry Pi Shield 2 4x Pin Header female, 8p, 2.54 3 1x Pin Header female, 2p, 2.54 4 1x Pin Header male, 3p, 2.54 5 2x Pin Header male, 4p, 2.54 6 1x Pin Header female, 2x20p, 2.54 7 1x JST-XH-3P 90\u00b0 8 1x DCDC converter, 12V-&gt;5V, &gt;2.5A 9 2x IRLZ34N 10 1x Barrel Connector, 5.5-2.1mm 11 1x Switch 12 2x Capacitor 100uF, 16V 13 1x Resistor 220 Ohm 14 1x Optocoupler PC817"},{"location":"hardware/PCBs/#important-remarks","title":"Important remarks","text":""},{"location":"hardware/PCBs/#dcdc-converter","title":"DCDC converter","text":"<p>FOLLOW THIS STEP CAREFULLY AS ANY ERROR CAN DESTROY THE RASPBERRY PI</p> <p>The voltage regulator IS NOT set to 5V by default, which you will have to do as shown here:</p> <ul> <li>solder the pin header (4) to the pi shield pcb</li> <li>check the back of the voltage regulator (8). The 5V solder pads (A) must be bridged. The connection at point (B) must be disconnected by scratching. This should set the converter to 5V</li> <li>Alternatively you can adjust the potentiometer on the front to set the correct output voltage of 5V.</li> </ul> <p></p> <ul> <li>When soldering the voltage regulator to the pin headers, make sure to have the right orientation and leave the uppermost hole free</li> </ul> <p></p>"},{"location":"hardware/PCBs/#control-the-voltage","title":"Control the Voltage!!","text":"<p>Before connecting any motors or the Raspberry Pi, you need to check if the voltage regulator is set to the right output of 5V. This can be done by connecting the PCB to 12V power supply through the barrel connector, switching (11.) to the lower position and checking the voltage between point (C) and (D), which must be 5.1V (\u00b10.1V). If this is not the case, you have to use the potentiometer on the voltage regulator (8.) to change the output voltage accordingly.</p>"},{"location":"hardware/PCBs/#capacitors","title":"Capacitors","text":"<p>(12) make sure to orient the capacitors in the right way due to their polarity. The negative side is labeled both on the PCB and on the capacitor itself.</p>"},{"location":"hardware/PCBs/#optocoupler","title":"Optocoupler","text":"<p>(14) Make sure to orient the optocoupler correctly. There is a small dot in one of the corners, which should face the resistor. see the following closeup:</p> <p></p>"},{"location":"hardware/PCBs/#soldering","title":"Soldering","text":"<p>PLEASE MAKE SURE TO CHECK OUT THE IMPORTANT REMARKS EARLIER</p> <p>Back:</p> <p></p> <p>Front:</p> <p></p>"},{"location":"hardware/PCBs/#ringlight-v1","title":"Ringlight v1","text":""},{"location":"hardware/PCBs/#bom_1","title":"BOM","text":"Nr. Picture Count Name 1 1x Raspberry Pi Ringlight PCB 2 8x LED 1W 3 2x Resistor 1Ohm 4 1x JST-XH-3P 90\u00b0"},{"location":"hardware/PCBs/#important-remarks_1","title":"Important remarks","text":""},{"location":"hardware/PCBs/#led-orientation","title":"LED orientation","text":"<p>Make sure that all LEDs are aligned correctly as shown in the following close-up. The hole on one side of the LED has to be facing the printed circle on the PCB.</p> <p></p>"},{"location":"hardware/PCBs/#soldering_1","title":"Soldering","text":"<p>You can test the circuit's functionality by applying 12V directly to the Ringlight PCB as shown in the following images:</p> <p></p>"},{"location":"photogrammetry/basics/","title":"How to create a perfect 3D scan","text":""},{"location":"photogrammetry/basics/#tldr","title":"TLDR","text":"<p>A perfect object's surface for photogrammetry looks something like this:</p> <p></p> <ul> <li>thousands of distinct/random features</li> <li>no specular highlights</li> <li>no blurry areas</li> <li>high contrast</li> </ul>"},{"location":"photogrammetry/basics/#guide","title":"Guide","text":"<p>It is all about the object's surface and some basic camera and lighting settings. But fortunately, there are some neat little tricks to scan almost any kind of object. The following flow chart gives an overview and should be printed and placed next to your scanner.</p> <p>Every new object poses a challenge, so take your time answering each individual question and adjust your workflow accordingly</p> <p>Below you can find many examples and explanations.</p> <p></p>"},{"location":"photogrammetry/basics/#table-of-contents","title":"Table of Contents","text":"<ol> <li>OBJECT</li> <li>Plastic Miniature</li> <li>Plastic replacment part</li> <li>Plastic 3D printed miniature</li> <li>Metal Key</li> <li>Cast Metal Tank Chain</li> <li>Stone spinning whorl (archeology)</li> <li>Flintstone tool/weapon</li> <li>LIGHT</li> <li>Cross polarization</li> <li>CAMERA</li> </ol>"},{"location":"photogrammetry/basics/#object","title":"OBJECT","text":"<p>I am using either the OpenScan Classic or Mini with the ring light turned on to create the following examples:</p>"},{"location":"photogrammetry/basics/#plastic-miniature","title":"Plastic miniature","text":"bad bad very good without polarizer with polarizer with polarizer and scanning spray The object has large unicolor areas and a lot of specular highlights The specular highlights can be removed with cross-polarisation (which is not absolutely necessary, but helps in the next step) Add thousands of tiny dots by applying a fine layer of scanning/chalk spray, the dots could be finer and denser."},{"location":"photogrammetry/basics/#plastic-replacement-part","title":"Plastic replacement part","text":"bad okay-ish perfect without polarizer with polarizer with polarizer and scanning spray The object seems to have a lot of surface features, where in fact it is almost totally unicolor. What you see here are thousands of specular highlights The specular highlights can be removed with cross-polarisation. Now, you are able to see, that the object is almost completely featureless (except for some small pieces of dirt, which might already be enough.) Add thousands of tiny dots by applying a fine layer of scanning/chalk spray. This is an example of a perfectly random, feature-rich surface"},{"location":"photogrammetry/basics/#plastic-3d-printed-miniature","title":"Plastic 3D Printed miniature","text":"bad bad perfect without polarizer with polarizer with polarizer and scanning spray Again, the surface seems feature-rich, but all you see are specular highlights created by the surface of the 3d print As soon as you add cross-polarization, all those highlights disappear and not many features are left Create a perfect, feature-rich surface with the help of some scanning spray"},{"location":"photogrammetry/basics/#metal-key","title":"metal key","text":"bad bad good without polarizer with polarizer with polarizer and scanning spray lots of specular highlights and almost no distinct surface features due to the high reflectivity of the surface, there are still specular highlights visible when using cross-polarisation (this could be avoided in a completely dark environment + polarized light source) adding dots helps a lot to create enough features, but the remaining specular highlights might create some noise in the resulting 3d mesh. To improve the result, you would have to matte the surface before applying the scanning spray"},{"location":"photogrammetry/basics/#cast-metal-tank-chain","title":"Cast metal tank chain","text":"bad very good without polarizer with polarizer"},{"location":"photogrammetry/basics/#stone-spinning-whorl","title":"Stone spinning whorl","text":"<p>This is basically as good as it could be, lots of features and almost no specular highlights.  Note, that not all types of stone show that amount of surface features/graininess.</p> perfect perfect without polarizer with polarizer"},{"location":"photogrammetry/basics/#stone-flintstone-tool","title":"Stone flintstone tool","text":"bad good without polarizer with polarizer A lot of specular highlights The feature on this surface are not very distinct and a little bit washed-out. Scanning spray could definitely help a lot"},{"location":"photogrammetry/basics/#wood","title":"Wood","text":"<p>This is basically as good as it could be, lots of features and almost no specular highlights. Note, that not all types of wood show that amount of surface features/graininess.</p> perfect perfect without polarizer with polarizer"},{"location":"photogrammetry/basics/#fabric","title":"Fabric","text":""},{"location":"photogrammetry/basics/#skin","title":"Skin","text":""},{"location":"photogrammetry/basics/#light","title":"LIGHT","text":""},{"location":"photogrammetry/basics/#cross-polarization","title":"Cross-polarization","text":""},{"location":"photogrammetry/basics/#camera","title":"CAMERA","text":""},{"location":"photogrammetry/quality/","title":"3D Scan Quality","text":""},{"location":"photogrammetry/quality/#overview","title":"Overview","text":"<p>all scans shown here are raw scans without any post-processing. Scaling was done using either a reference measurement or ICP fine registration using the free software CloudCompare</p>"},{"location":"photogrammetry/quality/#scaling","title":"Scaling","text":"<p>An inherent challenge of photogrammetry 3d scanning is, that the resulting 3D models will not come with an accurate scale. Therefore, it is always(*) necessary to scale the model using a reference measurement. Note, that this is an additional step, which is not needed for most other scanners.</p> <p>(*) the only way to circumvent this issue, is automatic scaling using either known camera positions and/or the use of markers.</p>"},{"location":"photogrammetry/quality/#mesh-accuracy","title":"Mesh accuracy","text":""},{"location":"photogrammetry/quality/#mesh-resolution","title":"Mesh Resolution","text":"<p>It is possible to resolve even finest features. In the following mesh you can see some surface patterns. Those vertical lines result from the printing process (MSLA) and correspond to the pixel size of the 3d printers screen.</p> <p></p>"},{"location":"photogrammetry/quality/#texture","title":"Texture","text":""},{"location":"photogrammetry/quality/#comparing-different-cameras","title":"Comparing different cameras","text":"<ul> <li>Left - OpenScan Mini with Pi Camera v2.1 (8mp)</li> <li>Right - OpenScan Mini with Arducam IMX519 (16mp) and autofocus</li> <li></li> </ul>"},{"location":"photogrammetry/quality/#comparison-with-other-scanners","title":"Comparison with other scanners","text":"<ul> <li>Left - OpenScan Mini with Pi Camera v2.1 (8mp)</li> <li>Right - Thunk 3D Cooper M20</li> </ul>"},{"location":"photogrammetry/software/","title":"Photogrammetry Software","text":""},{"location":"photogrammetry/software/#desktop-software","title":"Desktop Software","text":""},{"location":"photogrammetry/software/#commercial","title":"Commercial","text":"Software Description &amp; Remarks Links Reality Capture capturingreality.com Agisoft Metashape agisoft.com 3DF Zephyr 3dflow.net Bentley Context Capture bentley.com"},{"location":"photogrammetry/software/#open-source-andor-free","title":"Open-Source and/or free","text":"App Description &amp; Remarks Links AliceVision Meshroom (+) intuitive user interface(+) is being actively developed(-) low reconstruction speed(+) One-Click-Reconstruktion(+) Output: pointcloud, mesh, texture(-) GPU with CUDA required (Nvidia)(-) sub-optimal default settings alicevision.org VisualSFM (+) very fast reconstruction  (+) simple user interface (-) sometimes hard to set up(-) Output: pointcloud only (need additional software for meshing, e.g. CloudCompare or Meshlab) (-) only for private users CCWU.me OpenDroneMap opendronemap.org OpenMVG openMVG@github MVE cs.cmu.edu COLMAP colmap.github.io MicMac MicMac.ensg.eu"},{"location":"photogrammetry/software/#mobile-apps","title":"Mobile Apps","text":"App Description &amp; Remarks Links PhotoCatch iOS + MacOS photocatch@apps.apple.com Polycam poly.cam Scaniverse scaniverse.com"},{"location":"photogrammetry/software/#apis","title":"APIs","text":""},{"location":"showcase/scan/","title":"A collection of amazing 3d scans","text":""},{"location":"showcase/scan/#participate","title":"Participate","text":"<p>If you want to share your best 3D scan, please follow this link and open an issue. Provide some more details about your scan, so that others can learn :) </p> <ul> <li>a short and decriptive title</li> <li>Photo / Rendering (you can easily drag&amp;drop images and videos into the issue form)</li> <li>Some details about the capturing (scanner used, surface preparation, how many photos, which software, ..., anything worth mentioning)</li> <li>optional: Link to 3D file (e.g. on SketchFab)</li> <li>optional: provide a link with the dataset for others to play with (e.g. GoogleDrive/DropBox)</li> </ul> <p>Please make sure, that the scan does not violate any intellectual property/copyrights!</p> <p>By submitting the above mentioned details, you agree, that the given information can be used throughout the OpenScan Organisation</p>"},{"location":"showcase/scanner/","title":"A collection of amazing 3d scanner builds","text":""},{"location":"showcase/scanner/#participate","title":"Participate","text":"<p>If you want to inspire others, please share images or videos of your unique scanner builds. No matter how sketchy, low- or high- budget it is. Simply enter some details through the following form: this link </p> <p>Consider the following points:</p> <ul> <li>a short and decriptive title</li> <li>Photo / Rendering (you can easily drag&amp;drop images and videos into the issue form)</li> <li>Some details about your motivation behind the device</li> <li>optional: Some details about the build process/manual</li> <li>optional: Link to 3D files and additional resources (e.g. Youtube, Printables)</li> </ul> <p>Please make sure, that the scan does not violate any intellectual property/copyrights!</p> <p>By submitting the above mentioned details, you agree, that the given information can be used and shared throughout the OpenScan Organisation</p>"}]}